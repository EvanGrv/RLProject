[tool:pytest]
# Configuration pytest pour le projet Reinforcement Learning

# Dossiers à inclure dans les tests
testpaths = tests

# Patterns pour découvrir les tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Options par défaut
addopts = 
    -v
    --strict-markers
    --strict-config
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-fail-under=80
    --durations=10

# Marques personnalisées
markers =
    slow: marque les tests lents qui prennent du temps
    integration: marque les tests d'intégration
    unit: marque les tests unitaires
    benchmark: marque les tests de performance
    gpu: marque les tests qui nécessitent un GPU
    network: marque les tests qui nécessitent une connexion réseau

# Filtres d'avertissements
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
    ignore::ImportWarning
    ignore::gymnasium.utils.passive_env_checker.PassiveEnvChecker

# Configuration pour les tests en parallèle
# Décommenter pour utiliser pytest-xdist
# addopts = -n auto

# Minimum version de pytest
minversion = 6.0

# Répertoire de cache
cache_dir = .pytest_cache

# Ne pas générer de bytecode
dont_write_bytecode = true

# Options pour le coverage
[coverage:run]
source = src
omit = 
    */tests/*
    */venv/*
    */env/*
    setup.py
    */migrations/*
    */site-packages/*

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    pass
    except ImportError:

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml 